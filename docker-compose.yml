services:
  db:
    container_name: db
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ../db_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    ports:
      - "5432:5432"
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - CROUStillantNetwork

  pgbouncer:
    container_name: pgbouncer
    image: edoburu/pgbouncer:latest
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DATABASE}
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 500
      DEFAULT_POOL_SIZE: 20
      RESERVE_POOL_SIZE: 5
    ports:
      - "6432:6432"
    volumes:
      - ./userlist.txt:/etc/pgbouncer/userlist.txt:ro
    restart: unless-stopped
    networks:
      - CROUStillantNetwork

  pgbouncer-exporter:
    container_name: pgbouncer-exporter
    image: prometheuscommunity/pgbouncer-exporter:latest
    command:
      - --pgBouncer.connectionString=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pgbouncer:6432/pgbouncer?sslmode=disable
    ports:
      - "9127:9127"
    depends_on:
      - pgbouncer
    restart: unless-stopped
    networks:
      - CROUStillantNetwork

  script:
    container_name: script
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - CROUStillantNetwork

networks:
  CROUStillantNetwork:
    external: true

volumes:
  db_data:
